name: 🔍 PR Validation

on:
  pull_request:
    branches: [ main ]
    types: [opened, synchronize, reopened, ready_for_review]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  validate:
    name: 🧪 Validate Pull Request
    runs-on: ubuntu-latest
    if: github.event.pull_request.draft == false

    steps:
      - name: 📦 Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: 📦 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: 📥 Install Dependencies
        run: npm ci

      - name: 🏗️ Build Library
        run: npx nx build ngx-valid

      - name: 🧪 Run Tests
        run: npx nx test ngx-valid

      - name: 🔍 Run Lint (if available)
        run: |
          if npx nx show project ngx-valid | grep -q '"lint"'; then
            npx nx lint ngx-valid
          else
            echo "No lint target found, skipping..."
          fi
        continue-on-error: false

      - name: 📊 Type Check
        run: npx nx typecheck ngx-valid

      - name: 📋 Validate Package
        run: |
          cd packages/ngx-valid
          npm pack --dry-run

      - name: 🚀 Build Check Summary
        run: |
          echo "✅ All validation checks passed!"
          echo "- Build: ✅ Success"
          echo "- Tests: ✅ Passed"
          echo "- Types: ✅ Valid"
          echo "- Package: ✅ Valid"

  accessibility:
    name: ♿ Accessibility & Quality
    runs-on: ubuntu-latest
    if: github.event.pull_request.draft == false

    steps:
      - name: 📦 Checkout Repository
        uses: actions/checkout@v4

      - name: 📦 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: 📥 Install Dependencies
        run: npm ci

      - name: 🔍 Check for Security Issues
        run: npm audit --audit-level=high

      - name: 📊 Check Bundle Size
        run: |
          npx nx build ngx-valid
          ls -la packages/ngx-valid/dist/
          echo "Bundle analysis complete"

  metadata:
    name: 📋 PR Metadata Check
    runs-on: ubuntu-latest
    if: github.event.pull_request.draft == false

    steps:
      - name: 📦 Checkout Repository
        uses: actions/checkout@v4

      - name: 🏷️ Validate PR Title
        uses: amannn/action-semantic-pull-request@v5
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          types: |
            feat
            fix
            docs
            style
            refactor
            test
            chore
          requireScope: false

      - name: 📝 Check for Documentation Updates
        run: |
          if git diff --name-only origin/main...HEAD | grep -E "packages/ngx-valid/src/lib/.*\.ts$" && ! git diff --name-only origin/main...HEAD | grep -q "README.md"; then
            echo "⚠️ Warning: Code changes detected but README.md not updated"
            echo "Please ensure documentation is updated for new validators or significant changes"
            exit 1
          else
            echo "✅ Documentation check passed"
          fi

  summary:
    name: 📊 PR Validation Summary
    runs-on: ubuntu-latest
    needs: [validate, accessibility, metadata]
    if: always() && github.event.pull_request.draft == false

    steps:
      - name: 📋 Validation Results
        run: |
          echo "## 🔍 PR Validation Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          
          if [[ "${{ needs.validate.result }}" == "success" ]]; then
            echo "✅ **Build & Tests**: Passed" >> $GITHUB_STEP_SUMMARY
          else
            echo "❌ **Build & Tests**: Failed" >> $GITHUB_STEP_SUMMARY
          fi
          
          if [[ "${{ needs.accessibility.result }}" == "success" ]]; then
            echo "✅ **Quality Checks**: Passed" >> $GITHUB_STEP_SUMMARY
          else
            echo "❌ **Quality Checks**: Failed" >> $GITHUB_STEP_SUMMARY
          fi
          
          if [[ "${{ needs.metadata.result }}" == "success" ]]; then
            echo "✅ **PR Standards**: Met" >> $GITHUB_STEP_SUMMARY
          else
            echo "❌ **PR Standards**: Not Met" >> $GITHUB_STEP_SUMMARY
          fi
          
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "Ready for review! 🚀" >> $GITHUB_STEP_SUMMARY